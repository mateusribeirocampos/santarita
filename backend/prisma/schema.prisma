// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(ADMIN)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relacionamentos
  events    Event[]
  news      News[]
  
  @@map("users")
}

model Category {
  id          String      @id @default(cuid())
  name        String      @unique
  description String?
  type        CategoryType
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  // Relacionamentos
  events      Event[]
  news        News[]
  
  @@map("categories")
}

model Event {
  id              String    @id @default(cuid())
  title           String
  description     String
  fullDescription String?
  date            DateTime
  time            String
  location        String?
  image           String?
  type            String    @default("regular")
  isActive        Boolean   @default(true)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  // Relacionamentos
  categoryId      String
  category        Category  @relation(fields: [categoryId], references: [id])
  authorId        String?
  author          User?     @relation(fields: [authorId], references: [id])
  
  @@map("events")
}

model News {
  id          String    @id @default(cuid())
  title       String
  summary     String
  content     String
  image       String?
  isPublished Boolean   @default(false)
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  // Relacionamentos
  categoryId  String
  category    Category  @relation(fields: [categoryId], references: [id])
  authorId    String?
  author      User?     @relation(fields: [authorId], references: [id])
  
  @@map("news")
}

model Donation {
  id           String       @id @default(cuid())
  amount       Float
  currency     String       @default("BRL")
  donationType DonationType @default(ONCE)
  status       DonationStatus @default(PENDING)
  stripeId     String?      @unique
  donorEmail   String?
  donorName    String?
  donorPhone   String?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  
  @@map("donations")
}

model Newsletter {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("newsletters")
}

model ContactMessage {
  id        String   @id @default(cuid())
  name      String
  email     String
  subject   String
  message   String
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("contact_messages")
}

model Schedule {
  id          String   @id @default(cuid())
  dayOfWeek   Int      // 0 = Domingo, 1 = Segunda, etc.
  time        String
  type        String   // "missa", "adoracao", "confissao", etc.
  description String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("schedules")
}

model Prayer {
  id        String   @id @default(cuid())
  title     String
  content   String
  category  String   // "terco", "novena", "oracao", etc.
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("prayers")
}

model Saint {
  id          String   @id @default(cuid())
  name        String   @unique
  biography   String
  feastDay    String   // "dia-mes" ex: "22-05"
  image       String?
  isPatron    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("saints")
}

model Gallery {
  id        String   @id @default(cuid())
  title     String
  image     String
  category  String   // "eventos", "igreja", "comunidade", etc.
  eventId   String?
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("galleries")
}

// Enums
enum Role {
  USER
  ADMIN
  EDITOR
}

enum CategoryType {
  EVENT
  NEWS
}

enum DonationType {
  ONCE
  MONTHLY
  YEARLY
}

enum DonationStatus {
  PENDING
  PAID
  CANCELLED
  REFUNDED
}